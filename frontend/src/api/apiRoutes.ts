// This Content is Auto Generated
const prefix = `${import.meta.env.VITE_API_BASE_URL}`

export const API_ROUTES = {
  auditLogs: `${prefix}/audit-logs/`,
  coffee: `${prefix}/coffee/`,
  environments: `${prefix}/environments`,
  environmentsGenerateName: `${prefix}/environments/generate-name`,
  functions: `${prefix}/functions`,
  groups: `${prefix}/groups`,
  health: `${prefix}/health/`,
  login: `${prefix}/login`,
  logout: `${prefix}/logout`,
  me: `${prefix}/me`,
  organizations: `${prefix}/organizations`,
  policies: `${prefix}/policies`,
  refreshToken: `${prefix}/refresh-token`,
  rules: `${prefix}/rules`,
  tags: `${prefix}/tags`,
  users: `${prefix}/users`,
  usersResetPassword: `${prefix}/users/reset_password`,
  usersResetPasswordRequest: `${prefix}/users/reset_password_request`,

  elementsElementId: (element_id: string) => `${prefix}/elements/${element_id}`,
  elementsElementIdTags: (element_id: string) => `${prefix}/elements/${element_id}/tags`,
  elementsElementIdTagsTagId: (element_id: string, tag_id: string) => `${prefix}/elements/${element_id}/tags/${tag_id}`,
  elementsEnvironmentId: (environment_id: string) => `${prefix}/elements/${environment_id}`,
  environmentsEnvironmentId: (environment_id: string) => `${prefix}/environments/${environment_id}`,
  environmentsEnvironmentIdApplications: (environment_id: string) => `${prefix}/environments/${environment_id}/applications`,
  environmentsEnvironmentIdContainerClusters: (environment_id: string) => `${prefix}/environments/${environment_id}/container-clusters`,
  environmentsEnvironmentIdContainerNodes: (environment_id: string) => `${prefix}/environments/${environment_id}/container-nodes`,
  environmentsEnvironmentIdDomains: (environment_id: string) => `${prefix}/environments/${environment_id}/domains`,
  environmentsEnvironmentIdElements: (environment_id: string) => `${prefix}/environments/${environment_id}/elements`,
  environmentsEnvironmentIdNetworks: (environment_id: string) => `${prefix}/environments/${environment_id}/networks`,
  environmentsEnvironmentIdPhysicalHosts: (environment_id: string) => `${prefix}/environments/${environment_id}/physical-hosts`,
  environmentsEnvironmentIdStacks: (environment_id: string) => `${prefix}/environments/${environment_id}/stacks`,
  environmentsEnvironmentIdStoragePools: (environment_id: string) => `${prefix}/environments/${environment_id}/storage-pools`,
  environmentsEnvironmentIdTags: (environment_id: string) => `${prefix}/environments/${environment_id}/tags`,
  environmentsEnvironmentIdTagsTagId: (environment_id: string, tag_id: string) => `${prefix}/environments/${environment_id}/tags/${tag_id}`,
  environmentsEnvironmentIdUsers: (environment_id: string) => `${prefix}/environments/${environment_id}/users`,
  environmentsEnvironmentIdVms: (environment_id: string) => `${prefix}/environments/${environment_id}/vms`,
  environmentsEnvironmentIdVolumes: (environment_id: string) => `${prefix}/environments/${environment_id}/volumes`,
  functionsFunctionId: (function_id: string) => `${prefix}/functions/${function_id}`,
  groupsGroupId: (group_id: string) => `${prefix}/groups/${group_id}`,
  groupsGroupIdPolicy: (group_id: string) => `${prefix}/groups/${group_id}/policy`,
  groupsGroupIdPolicyPolicyId: (group_id: string, policy_id: string) => `${prefix}/groups/${group_id}/policy/${policy_id}`,
  groupsGroupIdTags: (group_id: string) => `${prefix}/groups/${group_id}/tags`,
  groupsGroupIdTagsTagId: (group_id: string, tag_id: string) => `${prefix}/groups/${group_id}/tags/${tag_id}`,
  groupsGroupIdUsers: (group_id: string) => `${prefix}/groups/${group_id}/users`,
  groupsGroupIdUsersUserId: (group_id: string, user_id: string) => `${prefix}/groups/${group_id}/users/${user_id}`,
  groupsOrganizationId: (organization_id: string) => `${prefix}/groups/${organization_id}`,
  groupsOrganizationOrgId: (org_id: string) => `${prefix}/groups/organization/${org_id}`,
  organizationsOrgId: (org_id: string) => `${prefix}/organizations/${org_id}`,
  organizationsOrgIdElements: (org_id: string) => `${prefix}/organizations/${org_id}/elements`,
  organizationsOrgIdEnvironments: (org_id: string) => `${prefix}/organizations/${org_id}/environments`,
  organizationsOrgIdGroups: (org_id: string) => `${prefix}/organizations/${org_id}/groups`,
  organizationsOrgIdPolicies: (org_id: string) => `${prefix}/organizations/${org_id}/policies`,
  organizationsOrgIdTags: (org_id: string) => `${prefix}/organizations/${org_id}/tags`,
  organizationsOrgIdUsers: (org_id: string) => `${prefix}/organizations/${org_id}/users`,
  organizationsOrgIdUsersUserId: (org_id: string, user_id: string) => `${prefix}/organizations/${org_id}/users/${user_id}`,
  policiesPolicyId: (policy_id: string) => `${prefix}/policies/${policy_id}`,
  policiesPolicyIdGroups: (policy_id: string) => `${prefix}/policies/${policy_id}/groups`,
  policiesPolicyIdGroupsGroupId: (policy_id: string, group_id: string) => `${prefix}/policies/${policy_id}/groups/${group_id}`,
  policiesPolicyIdRules: (policy_id: string) => `${prefix}/policies/${policy_id}/rules`,
  policiesPolicyIdTagsTagId: (policy_id: string, tag_id: string) => `${prefix}/policies/${policy_id}/tags/${tag_id}`,
  policiesPolicyIdUsers: (policy_id: string) => `${prefix}/policies/${policy_id}/users`,
  policiesPolicyIdUsersUserId: (policy_id: string, user_id: string) => `${prefix}/policies/${policy_id}/users/${user_id}`,
  rulesRuleId: (rule_id: string) => `${prefix}/rules/${rule_id}`,
  tagsTagId: (tag_id: string) => `${prefix}/tags/${tag_id}`,
  tagsTagIdElements: (tag_id: string) => `${prefix}/tags/${tag_id}/elements`,
  tagsTagIdEnvironments: (tag_id: string) => `${prefix}/tags/${tag_id}/environments`,
  tagsTagIdGroups: (tag_id: string) => `${prefix}/tags/${tag_id}/groups`,
  tagsTagIdPolicies: (tag_id: string) => `${prefix}/tags/${tag_id}/policies`,
  tagsTagIdUsers: (tag_id: string) => `${prefix}/tags/${tag_id}/users`,
  usersOrganizationId: (organization_id: string) => `${prefix}/users/${organization_id}`,
  usersUserId: (user_id: string) => `${prefix}/users/${user_id}`,
  usersUserIdGroups: (user_id: string) => `${prefix}/users/${user_id}/groups`,
  usersUserIdOrganizations: (user_id: string) => `${prefix}/users/${user_id}/organizations`,
  usersUserIdPassword: (user_id: string) => `${prefix}/users/${user_id}/password`,
  usersUserIdPolicies: (user_id: string) => `${prefix}/users/${user_id}/policies`,
  usersUserIdSuperadmin: (user_id: string) => `${prefix}/users/${user_id}/superadmin`,
  usersUserIdTags: (user_id: string) => `${prefix}/users/${user_id}/tags`,
  usersUserIdTagsTagId: (user_id: string, tag_id: string) => `${prefix}/users/${user_id}/tags/${tag_id}`,
} as const

export type ApiRoutes = typeof API_ROUTES
