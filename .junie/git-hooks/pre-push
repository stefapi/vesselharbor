#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-push hooks...${NC}"

# Check if we're in the root directory of the project
if [ ! -f "Makefile" ] && [ ! -f "package.json" ]; then
    echo -e "${RED}Error: This script must be run from the root of the project.${NC}"
    exit 1
fi

# Get the current branch name
current_branch=$(git symbolic-ref --short HEAD)
echo -e "${YELLOW}Current branch:${NC} $current_branch"

# Run backend tests if we're in a Python project
if [ -d "app" ]; then
    echo -e "${YELLOW}Running backend tests...${NC}"

    # Check if poetry is installed
    if command -v poetry &> /dev/null; then
        cd app
        poetry run pytest -xvs || {
            echo -e "${RED}Backend tests failed. Please fix the tests before pushing.${NC}"
            exit 1
        }
        cd ..
    else
        echo -e "${YELLOW}Warning: Poetry not found. Skipping backend tests.${NC}"
    fi
fi

# Run frontend tests if we're in a JS/TS project
if [ -d "frontend" ]; then
    echo -e "${YELLOW}Running frontend tests...${NC}"

    # Check if pnpm is installed
    if command -v pnpm &> /dev/null; then
        cd frontend

        # Run unit tests
        echo -e "${YELLOW}Running unit tests...${NC}"
        pnpm test:ci || {
            echo -e "${RED}Frontend unit tests failed. Please fix the tests before pushing.${NC}"
            exit 1
        }

        cd ..
    else
        echo -e "${YELLOW}Warning: pnpm not found. Skipping frontend tests.${NC}"
    fi
fi

echo -e "${GREEN}All tests passed! Pushing to remote repository...${NC}"
exit 0
